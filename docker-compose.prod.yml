version: "3.8"

services:
  django:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: prod-django
    ports:
      - "8000:8000"
    env_file:
      - ./.env-example
    volumes:
      - static:/srv/app/staticfiles
      - media:/srv/app/media
    restart: always
    networks:
      - app-network

  react:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: prod-react
    ports:
      - "8081:80"
    restart: always
    depends_on:
      - django
    networks:
      - app-network

  db:
    image: postgres:16.1-alpine
    container_name: prod-db
    env_file:
      - ./.env-example
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.prod
    container_name: prod-nginx
    ports:
      - "80:80"
      - "443:443"  # Add port 443 for HTTPS
    volumes:
      - static:/srv/app/staticfiles
      - media:/srv/app/media
      - certbot-etc:/etc/letsencrypt  # SSL certificates volume
      - certbot-www:/var/www/certbot  # Webroot for Certbot challenges
    depends_on:
      - django
      - react
      - db
    restart: always
    networks:
      - app-network

  services:
    certbot:
      image: certbot/certbot
      container_name: prod-certbot
      volumes:
        - certbot-etc:/etc/letsencrypt
        - certbot-www:/var/www/certbot
      entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h; done;'"
      networks:
        - app-network

volumes:
  node_modules:
  postgres_data:
  media:
  static:
  certbot-etc:
  certbot-www:

networks:
  app-network:
    driver: bridge
