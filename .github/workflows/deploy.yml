name: Deploy Application

on:
  push:
    branches:
      - main  # Trigger the workflow when code is pushed to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Install SSH Client
      - name: Install SSH Client
        run: sudo apt-get install -y openssh-client

      # Set up SSH and known_hosts
      - name: Setup SSH and known_hosts
        env:
          DO_HOST: ${{ secrets.DO_HOST }}  # Pass the secret here
        run: |
          echo "Setting up SSH and known_hosts"
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "Adding SSH host key for $DO_HOST to known_hosts"
          ssh-keyscan -H $DO_HOST >> ~/.ssh/known_hosts
          echo "SSH host key added successfully"

      # Deploy to DigitalOcean
      - name: Deploy to DigitalOcean
        env:
          SSH_PASSWORD: ${{ secrets.DO_SSH_PASSWORD }}  # Secret for SSH password
          DO_USER: ${{ secrets.DO_USER }}  # Secret for SSH username
          DO_HOST: ${{ secrets.DO_HOST }}  # Secret for the server host
        run: |
          echo "Deploying to DigitalOcean"
          
          # Use sshpass to pass the password and SSH into the server
          sshpass -p "${SSH_PASSWORD}" ssh -o StrictHostKeyChecking=no $DO_USER@$DO_HOST -p 5417 << 'EOF'
            set -e  # Exit on any error
            echo "Starting deployment..."
            if [ -d /mnt/dev/finfolio ]; then
              echo "Directory /mnt/dev/finfolio exists. Proceeding with deployment."
              cd /mnt/dev/finfolio
              if [ -d .git ]; then
                echo "Git repository found. Pulling latest changes from main..."
                git pull origin main  # Update your codebase if it's a Git repository
                echo "Git pull completed successfully."
                
                echo "Shutting down existing Docker containers..."
                docker-compose -f docker-compose.prod.yml down
                echo "Docker containers shut down."
                
                echo "Pulling new Docker images..."
                docker-compose -f docker-compose.prod.yml pull
                echo "Docker images pulled successfully."

                echo "Building new Docker images..."
                docker-compose -f docker-compose.prod.yml build
                echo "Docker images built successfully."

                echo "Starting up Docker containers..."
                docker-compose -f docker-compose.prod.yml up -d
                echo "Docker containers started successfully."
              else
                echo "Not a git repository, skipping git pull"
              fi
            else
              echo "Directory /
